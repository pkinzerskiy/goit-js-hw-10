{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["\"use strict\";\n\nimport flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport { Ukrainian } from \"flatpickr/dist/l10n/uk.js\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\nconst clickBtn = document.querySelector('button[data-start]');\n\nconst secondTeg = document.querySelector('span[data-seconds]');\nconst minuteTeg = document.querySelector('span[data-minutes]');\nconst hourTeg = document.querySelector('span[data-hours]');\nconst daysTeg = document.querySelector('span[data-days]');\n\nlet currentTime = Date.now();\nlet userSelectedDate = 0;\n\nconst options = {\n  dateFormat: \"d.m.Y H:i:S\",\n  \"locale\": Ukrainian,\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n      userSelectedDate = selectedDates[0].getTime();\n      if (userSelectedDate < currentTime) {\n            showMsg(\"Please choose a date in the future\", \"red\")\n        }\n        \n    },\n};\n\n\n\nflatpickr(\"#datetime-picker\", options);\n\nclass Count {    \n    constructor() {\n        this.rangeTime,  \n        this.idTimer = ''\n    }\n\n    startTimer() {\n        if (this.idTimer) {\n            console.log(\"timer is active\");\n            return;\n        }\n        this.rangeTime = userSelectedDate - currentTime;\n        document.getElementById('datetime-picker').disabled = true;\n        clickBtn.disabled = true;\n    \n        console.log(\"rangeTime \", this.rangeTime);\n            this.idTimer = setInterval(() => {\n                this.rangeTime -= 1000;\n                if (this.rangeTime <= 0) {\n                    clickBtn.disabled = false;\n\n                    document.getElementById('datetime-picker').disabled = false;\n                    console.log(\"stop interval\", this.idTimer);\n                    clearInterval(this.idTimer);\n                    this.idTimer = '';\n                    // console.log(\"stop interval\", this.idTimer);\n                    return;\n                }\n                setTime(convertMs(this.rangeTime));\n        }, 1000);\n    }\n}\n\n\nconst calculation = new Count();\n\nconsole.log(\"my class calculation\", calculation);\n\nclickBtn.addEventListener(\"click\", calculation.startTimer);\n\n\nfunction convertMs(ms) {\n//   Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = pad(Math.floor(ms / day));\n  // Remaining hours\n  const hours = pad(Math.floor((ms % day) / hour));\n  // Remaining minutes\n  const minutes = pad(Math.floor(((ms % day) % hour) / minute));\n  // Remaining seconds\n  const seconds = pad(Math.floor((((ms % day) % hour) % minute) / second));\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction pad(value) {\n        return String(value).padStart(2, \"0\");\n    }\n\nfunction setTime({ days, hours, minutes, seconds }) {\n    secondTeg.textContent = seconds;\n    minuteTeg.textContent = minutes;\n    hourTeg.textContent = hours;\n    daysTeg.textContent = days;\n    console.log(days, hours, minutes, seconds);\n    return\n}\n\nfunction showMsg(msg, color) {\n    iziToast.show({\n                    message: msg,\n                    backgroundColor: color, \n                    messageColor: 'white',\n                    position:'topRight'\n    \n});\n}"],"names":["clickBtn","secondTeg","minuteTeg","hourTeg","daysTeg","currentTime","userSelectedDate","options","Ukrainian","selectedDates","showMsg","flatpickr","Count","setTime","convertMs","calculation","ms","days","pad","hours","minutes","seconds","value","msg","color","iziToast"],"mappings":"uJASA,MAAMA,EAAW,SAAS,cAAc,oBAAoB,EAEtDC,EAAY,SAAS,cAAc,oBAAoB,EACvDC,EAAY,SAAS,cAAc,oBAAoB,EACvDC,EAAU,SAAS,cAAc,kBAAkB,EACnDC,EAAU,SAAS,cAAc,iBAAiB,EAExD,IAAIC,EAAc,KAAK,MACnBC,EAAmB,EAEvB,MAAMC,EAAU,CACd,WAAY,cACZ,OAAUC,EAAS,UACnB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnBH,EAAmBG,EAAc,CAAC,EAAE,QAAO,EACvCH,EAAmBD,GACjBK,EAAQ,qCAAsC,KAAK,CAG1D,CACL,EAIAC,EAAU,mBAAoBJ,CAAO,EAErC,MAAMK,CAAM,CACR,aAAc,CACV,KAAK,UACL,KAAK,QAAU,EAClB,CAED,YAAa,CACT,GAAI,KAAK,QAAS,CACd,QAAQ,IAAI,iBAAiB,EAC7B,MACH,CACD,KAAK,UAAYN,EAAmBD,EACpC,SAAS,eAAe,iBAAiB,EAAE,SAAW,GACtDL,EAAS,SAAW,GAEpB,QAAQ,IAAI,aAAc,KAAK,SAAS,EACpC,KAAK,QAAU,YAAY,IAAM,CAE7B,GADA,KAAK,WAAa,IACd,KAAK,WAAa,EAAG,CACrBA,EAAS,SAAW,GAEpB,SAAS,eAAe,iBAAiB,EAAE,SAAW,GACtD,QAAQ,IAAI,gBAAiB,KAAK,OAAO,EACzC,cAAc,KAAK,OAAO,EAC1B,KAAK,QAAU,GAEf,MACH,CACDa,EAAQC,EAAU,KAAK,SAAS,CAAC,CACxC,EAAE,GAAI,CACV,CACL,CAGA,MAAMC,EAAc,IAAIH,EAExB,QAAQ,IAAI,uBAAwBG,CAAW,EAE/Cf,EAAS,iBAAiB,QAASe,EAAY,UAAU,EAGzD,SAASD,EAAUE,EAAI,CAQrB,MAAMC,EAAOC,EAAI,KAAK,MAAMF,EAAK,KAAG,CAAC,EAE/BG,EAAQD,EAAI,KAAK,MAAOF,EAAK,MAAO,IAAI,CAAC,EAEzCI,EAAUF,EAAI,KAAK,MAAQF,EAAK,MAAO,KAAQ,GAAM,CAAC,EAEtDK,EAAUH,EAAI,KAAK,MAASF,EAAK,MAAO,KAAQ,IAAU,GAAM,CAAC,EAEvE,MAAO,CAAE,KAAAC,EAAM,MAAAE,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASH,EAAII,EAAO,CACZ,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACvC,CAEL,SAAST,EAAQ,CAAE,KAAAI,EAAM,MAAAE,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAChDpB,EAAU,YAAcoB,EACxBnB,EAAU,YAAckB,EACxBjB,EAAQ,YAAcgB,EACtBf,EAAQ,YAAca,EACtB,QAAQ,IAAIA,EAAME,EAAOC,EAASC,CAAO,CAE7C,CAEA,SAASX,EAAQa,EAAKC,EAAO,CACzBC,EAAS,KAAK,CACE,QAASF,EACT,gBAAiBC,EACjB,aAAc,QACd,SAAS,UAE7B,CAAC,CACD"}